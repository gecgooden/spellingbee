{"version":3,"sources":["App.tsx","shuffle.ts","index.tsx"],"names":["pangram","pangrams","Math","floor","random","length","console","log","letters","array","i","j","shuffle","Array","from","Set","split","values","map","letter","toUpperCase","requiredLetter","pop","splice","App","useState","selectedLetters","setLetters","correctWords","setCorrectWords","className","join","width","height","viewBox","size","x","y","flat","spacing","origin","q","r","s","onClick","id","link","word","indexOf","words","toLowerCase","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adcca8e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport pangrams from './words/pangrams.json';\nimport { HexGrid, Layout, Hexagon, Text, Pattern } from 'react-hexgrid';\nimport shuffle from './shuffle';\nimport words from './words/words.json';\n\nconst pangram = pangrams[Math.floor(Math.random() * pangrams.length)];\nconsole.log(pangram);\nlet letters = shuffle(\n  Array.from(\n    new Set<string>(pangram.split('')).values()\n  ).map(letter => letter.toUpperCase())\n);\nconst requiredLetter = letters.pop();\nletters = letters.splice(0);\n\nfunction App() {\n  const [selectedLetters, setLetters] = useState<string[]>([]);\n  const [correctWords, setCorrectWords] = useState<string[]>([]);\n\n  const checkWord = (word: string) => {\n    console.log(word);\n    if (word.indexOf(requiredLetter) >= 0 && words.indexOf(word.toLowerCase()) >= 0) {\n      setCorrectWords([...correctWords, word]);\n    }\n    setLetters([]);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>{selectedLetters.join('')}</h1>\n      <HexGrid width={800} height={800} viewBox=\"-50 -50 100 100\">\n        <Layout size={{ x: 10, y: 10 }} flat={true} spacing={1.1} origin={{ x: 0, y: 0 }}>\n          <Hexagon q={0} r={0} s={0} onClick={() => setLetters([...selectedLetters, requiredLetter])}>\n            <Text>{requiredLetter}</Text>\n          </Hexagon>\n\n          <Hexagon q={0} r={-1} s={1} onClick={() => setLetters([...selectedLetters, letters[0]])}>\n            <Text>{letters[0]}</Text>\n          </Hexagon>\n          <Hexagon q={0} r={1} s={-1} onClick={() => setLetters([...selectedLetters, letters[1]])}>\n            <Text>{letters[1]}</Text>\n          </Hexagon>\n          <Hexagon q={1} r={-1} s={0} onClick={() => setLetters([...selectedLetters, letters[2]])}>\n            <Text>{letters[2]}</Text>\n          </Hexagon>\n\n          <Hexagon q={1} r={0} s={-1} onClick={() => setLetters([...selectedLetters, letters[3]])}>\n            <Text>{letters[3]}</Text>\n          </Hexagon>\n          <Hexagon q={-1} r={1} s={0} onClick={() => setLetters([...selectedLetters, letters[4]])}>\n            <Text>{letters[4]}</Text>\n          </Hexagon>\n          <Hexagon q={-1} r={0} s={1} onClick={() => setLetters([...selectedLetters, letters[5]])}>\n            <Text>{letters[5]}</Text>\n          </Hexagon>\n        </Layout>\n        <Pattern id=\"pat-1\" link=\"http://cat-picture\" />\n      </HexGrid>\n      <button onClick={() => setLetters([])}>Clear</button>\n      <button onClick={() => checkWord(selectedLetters.join(''))}>Submit</button>\n      <ul>{correctWords.map(word => (<li key={word}><h2>{word}</h2></li>))}</ul>\n    </div>\n  );\n}\n\nexport default App;\n","export default function (array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}