{"version":3,"sources":["CorrectWords.tsx","SelectedLetters.tsx","App.tsx","shuffle.ts","index.tsx"],"names":["props","useState","open","setOpen","words","map","capitalize","length","renderEmpty","renderExpanded","renderCollapsed","s","charAt","toUpperCase","toLowerCase","slice","expand","ListGroup","onClick","Item","join","collapse","sort","word","key","required","divs","selected","index","className","pangram","pangrams","Math","floor","random","letters","array","i","j","shuffle","Array","from","Set","split","values","letter","requiredLetter","pop","splice","selectedLetters","setLetters","correctWords","setCorrectWords","Container","fluid","Row","Col","width","height","viewBox","size","x","y","flat","spacing","origin","q","r","Button","disabled","containsRequired","indexOf","validWord","console","log","checkWord","CorrectWords","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9acf7777.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport interface CorrectWordProps {\n    words: string[]\n}\n\nexport default function (props: CorrectWordProps) {\n    const [open, setOpen] = useState(false);\n    const expand = () => setOpen(true);\n    const collapse = () => setOpen(false);\n\n    const words = props.words.map(capitalize);\n    if (words.length === 0) return renderEmpty();\n    \n    return open\n        ? renderExpanded(words, collapse) \n        : renderCollapsed(words, expand);\n}\n\nconst capitalize = (s: string) => {\n    return s.charAt(0).toUpperCase() + s.toLowerCase().slice(1);\n}\n\nconst renderCollapsed = (words: string[], expand: () => void ) => (\n    <ListGroup onClick={expand}>\n        <ListGroup.Item>{words.map(capitalize).join(', ')}</ListGroup.Item>\n    </ListGroup>\n);\n\nconst renderExpanded = (words: string[], collapse: () => void) => (\n    <ListGroup onClick={collapse}>\n        {words.sort().map(word => \n            <ListGroup.Item key={word}>\n                {word}\n            </ListGroup.Item>\n        )}\n    </ListGroup>\n);\n\nconst renderEmpty = () => (\n    <ListGroup>\n        <ListGroup.Item>No words found yet</ListGroup.Item>\n    </ListGroup>\n);","import React from 'react';\nimport './SelectedLetters.css';\n\nexport interface SelectedLettersProps {\n    required: string\n    selected: string[]\n}\n\nexport default function (props: SelectedLettersProps) {\n    const { required, selected } = props;\n    const divs = selected\n        .map((s, index) => \n            <span key={`${s}-${index}`} className={s === required ? 'required': ''}>{s}</span>\n        );\n    return (\n        <div className='selected text-center'>\n           {divs} \n        </div>\n    );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport pangrams from './words/pangrams.json';\nimport { HexGrid, Layout, Hexagon, Text } from 'react-hexgrid';\nimport shuffle from './shuffle';\nimport words from './words/words.json';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CorrectWords from './CorrectWords';\nimport SelectedLetters from './SelectedLetters';\n\n\nconst pangram = pangrams[Math.floor(Math.random() * pangrams.length)];\nlet letters = shuffle(\n  Array.from(\n    new Set<string>(pangram.split('')).values()\n  ).map(letter => letter.toUpperCase())\n);\nconst requiredLetter = letters.pop();\nletters = letters.splice(0);\n\nexport default function () {\n\n  const [selectedLetters, setLetters] = useState<string[]>([]);\n  const [correctWords, setCorrectWords] = useState<string[]>([]);\n\n  const checkWord = (word: string) => {\n    const containsRequired = word.indexOf(requiredLetter) >= 0;\n    const validWord = words.indexOf(word.toLowerCase()) >= 0;\n    console.log({ containsRequired, validWord });\n    if (containsRequired && validWord) {\n      setCorrectWords([word, ...correctWords]);\n    }\n    setLetters([]);\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <SelectedLetters selected={selectedLetters} required={requiredLetter}/>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <HexGrid width=\"100%\" height=\"350px\" viewBox=\"-1 -30 1 60\">\n            <Layout size={{ x: 10, y: 10 }} flat={true} spacing={1.1} origin={{ x: 0, y: 0 }}>\n              <Hexagon q={0} r={0} s={0} onClick={() => setLetters([...selectedLetters, requiredLetter])}>\n                <Text>{requiredLetter}</Text>\n              </Hexagon>\n\n              <Hexagon q={0} r={-1} s={1} onClick={() => setLetters([...selectedLetters, letters[0]])}>\n                <Text>{letters[0]}</Text>\n              </Hexagon>\n              <Hexagon q={0} r={1} s={-1} onClick={() => setLetters([...selectedLetters, letters[1]])}>\n                <Text>{letters[1]}</Text>\n              </Hexagon>\n              <Hexagon q={1} r={-1} s={0} onClick={() => setLetters([...selectedLetters, letters[2]])}>\n                <Text>{letters[2]}</Text>\n              </Hexagon>\n\n              <Hexagon q={1} r={0} s={-1} onClick={() => setLetters([...selectedLetters, letters[3]])}>\n                <Text>{letters[3]}</Text>\n              </Hexagon>\n              <Hexagon q={-1} r={1} s={0} onClick={() => setLetters([...selectedLetters, letters[4]])}>\n                <Text>{letters[4]}</Text>\n              </Hexagon>\n              <Hexagon q={-1} r={0} s={1} onClick={() => setLetters([...selectedLetters, letters[5]])}>\n                <Text>{letters[5]}</Text>\n              </Hexagon>\n            </Layout>\n          </HexGrid>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <Button onClick={() => setLetters([])} disabled={selectedLetters.length === 0}>Clear</Button>\n        </Col>\n        <Col className=\"d-flex justify-content-center\">\n          <Button onClick={() => {setLetters(selectedLetters.slice(0, -1));}} disabled={selectedLetters.length === 0}>Delete</Button>\n        </Col>\n        <Col className=\"d-flex justify-content-center\">\n          <Button onClick={() => checkWord(selectedLetters.join(''))} disabled={!(selectedLetters.length > 3 && selectedLetters.indexOf(requiredLetter) >= 0)}>Submit</Button>\n        </Col>\n      </Row>\n      <Row className=\"pt-4\">\n        <Col>\n          <CorrectWords words={correctWords} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}","export default function (array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}