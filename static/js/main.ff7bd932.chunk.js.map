{"version":3,"sources":["CorrectWords.tsx","App.tsx","shuffle.ts","index.tsx"],"names":["props","useState","open","setOpen","words","remainingWords","length","slice","ListGroup","Item","onClick","Collapse","in","map","word","key","pangram","pangrams","Math","floor","random","console","log","letters","array","i","j","shuffle","Array","from","Set","split","values","letter","toUpperCase","requiredLetter","pop","splice","App","selectedLetters","setLetters","correctWords","setCorrectWords","Container","fluid","Row","Col","join","width","height","viewBox","size","x","y","flat","spacing","origin","q","r","s","Button","disabled","indexOf","toLowerCase","CorrectWords","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff7bd932.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport interface CorrectWordProps {\n    words: string[]\n}\n\nexport default function (props: CorrectWordProps) {\n    const [open, setOpen] = useState(false);\n    \n    const { words } = props;\n    const remainingWords = words.length === 0 ? [] : words.slice(1);\n\n    return (\n        <>\n            <ListGroup>\n                {\n                    words.length === 0\n                    ? <ListGroup.Item>No words found yet</ListGroup.Item>\n                    : <ListGroup.Item onClick={() => setOpen(!open)}>{words[0]}</ListGroup.Item>\n                }\n                <Collapse in={open}>\n                    <div>\n                        {remainingWords.length > 0 && remainingWords.map(word => <ListGroup.Item key={word}>{word}</ListGroup.Item>)}\n                    </div>\n                </Collapse>\n            </ListGroup>\n        </>\n    );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport pangrams from './words/pangrams.json';\nimport { HexGrid, Layout, Hexagon, Text } from 'react-hexgrid';\nimport shuffle from './shuffle';\nimport words from './words/words.json';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CorrectWords from './CorrectWords';\n\nconst pangram = pangrams[Math.floor(Math.random() * pangrams.length)];\nconsole.log(pangram);\nlet letters = shuffle(\n  Array.from(\n    new Set<string>(pangram.split('')).values()\n  ).map(letter => letter.toUpperCase())\n);\nconst requiredLetter = letters.pop();\nletters = letters.splice(0);\n\nfunction App() {\n  const [selectedLetters, setLetters] = useState<string[]>([]);\n  const [correctWords, setCorrectWords] = useState<string[]>([]);\n\n  const checkWord = (word: string) => {\n    console.log(word);\n    if (word.indexOf(requiredLetter) >= 0 && words.indexOf(word.toLowerCase()) >= 0) {\n      setCorrectWords([...correctWords, word]);\n    }\n    setLetters([]);\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <h1>{selectedLetters.length === 0 ? '' : selectedLetters.join('')}</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <HexGrid width={800} height={800} viewBox=\"-50 -50 100 100\">\n            <Layout size={{ x: 10, y: 10 }} flat={true} spacing={1.1} origin={{ x: 0, y: 0 }}>\n              <Hexagon q={0} r={0} s={0} onClick={() => setLetters([...selectedLetters, requiredLetter])}>\n                <Text>{requiredLetter}</Text>\n              </Hexagon>\n\n              <Hexagon q={0} r={-1} s={1} onClick={() => setLetters([...selectedLetters, letters[0]])}>\n                <Text>{letters[0]}</Text>\n              </Hexagon>\n              <Hexagon q={0} r={1} s={-1} onClick={() => setLetters([...selectedLetters, letters[1]])}>\n                <Text>{letters[1]}</Text>\n              </Hexagon>\n              <Hexagon q={1} r={-1} s={0} onClick={() => setLetters([...selectedLetters, letters[2]])}>\n                <Text>{letters[2]}</Text>\n              </Hexagon>\n\n              <Hexagon q={1} r={0} s={-1} onClick={() => setLetters([...selectedLetters, letters[3]])}>\n                <Text>{letters[3]}</Text>\n              </Hexagon>\n              <Hexagon q={-1} r={1} s={0} onClick={() => setLetters([...selectedLetters, letters[4]])}>\n                <Text>{letters[4]}</Text>\n              </Hexagon>\n              <Hexagon q={-1} r={0} s={1} onClick={() => setLetters([...selectedLetters, letters[5]])}>\n                <Text>{letters[5]}</Text>\n              </Hexagon>\n            </Layout>\n          </HexGrid>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button onClick={() => setLetters([])}>Clear</Button>\n        </Col>\n        <Col>\n          <Button onClick={() => {setLetters(selectedLetters.slice(0, -1));}} disabled={selectedLetters.length === 0}>Delete</Button>\n        </Col>\n        <Col>\n          <Button onClick={() => checkWord(selectedLetters.join(''))} disabled={!(selectedLetters.length > 3 && selectedLetters.indexOf(requiredLetter) > 0)}>Submit</Button>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CorrectWords words={correctWords} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","export default function (array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}